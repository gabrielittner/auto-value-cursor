import org.gradle.internal.jvm.Jvm

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = rootProject.ext.javaVersion
targetCompatibility = rootProject.ext.javaVersion

// disable default jar tasks
configurations.runtime.artifacts.removeAll { it.archiveTask.is jar }
tasks.getByName('jar').enabled = false

// create extra configuration for shaded dependencies, so they're not included in the pom
def shadedConfig = configurations.create('compileShaded');
configurations.compileOnly.extendsFrom(shadedConfig)
configurations.testCompile.extendsFrom(shadedConfig)

shadowJar {
    classifier = ''
    configurations = [shadedConfig]

    relocate 'com.google.common', 'autovaluewith.shaded.com.google.common'
    relocate 'com.google.auto.common', 'autovaluewith.shaded.com.google.auto.common'
    relocate 'com.google.thirdparty', 'autovaluewith.shaded.com.google.thirdparty'
    relocate 'com.gabrielittner.auto.value.util', 'autovaluecursor.shaded.com.gabrielittner.auto.value.util'
}

artifacts {
    runtime shadowJar
    archives shadowJar
}


dependencies {
    compile project(':auto-value-cursor-annotations')
    compile deps.javapoet
    compile deps.auto_value
    compileShaded deps.auto_common
    compileShaded (deps.auto_ext_util) {
        exclude group: 'com.google.auto.value', module: 'auto-value'
        exclude group: 'com.squareup', module: 'javapoet'
    }

    compileOnly deps.auto_service

    testCompile deps.junit
    testCompile deps.truth
    testCompile deps.compile_testing
    testCompile files(Jvm.current().getToolsJar())
    testCompile deps.jsr305
}

apply from: rootProject.file('gradle/mvn-push.gradle')
